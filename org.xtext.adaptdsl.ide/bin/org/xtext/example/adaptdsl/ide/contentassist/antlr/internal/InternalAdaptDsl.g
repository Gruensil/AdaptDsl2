/*
 * generated by Xtext 2.10.0
 */
grammar InternalAdaptDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.adaptdsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.adaptdsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.adaptdsl.services.AdaptDslGrammarAccess;

}
@parser::members {
	private AdaptDslGrammarAccess grammarAccess;

	public void setGrammarAccess(AdaptDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getModelAccess().getAdaptationRulesAssignment()); }
			(rule__Model__AdaptationRulesAssignment)
			{ after(grammarAccess.getModelAccess().getAdaptationRulesAssignment()); }
		)
		(
			{ before(grammarAccess.getModelAccess().getAdaptationRulesAssignment()); }
			(rule__Model__AdaptationRulesAssignment)*
			{ after(grammarAccess.getModelAccess().getAdaptationRulesAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleadaptionRule
entryRuleadaptionRule
:
{ before(grammarAccess.getAdaptionRuleRule()); }
	 ruleadaptionRule
{ after(grammarAccess.getAdaptionRuleRule()); } 
	 EOF 
;

// Rule adaptionRule
ruleadaptionRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdaptionRuleAccess().getGroup()); }
		(rule__AdaptionRule__Group__0)
		{ after(grammarAccess.getAdaptionRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleName
entryRuleRuleName
:
{ before(grammarAccess.getRuleNameRule()); }
	 ruleRuleName
{ after(grammarAccess.getRuleNameRule()); } 
	 EOF 
;

// Rule RuleName
ruleRuleName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleNameAccess().getRuleAssignment()); }
		(rule__RuleName__RuleAssignment)
		{ after(grammarAccess.getRuleNameAccess().getRuleAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditions
entryRuleConditions
:
{ before(grammarAccess.getConditionsRule()); }
	 ruleConditions
{ after(grammarAccess.getConditionsRule()); } 
	 EOF 
;

// Rule Conditions
ruleConditions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionsAccess().getGroup()); }
		(rule__Conditions__Group__0)
		{ after(grammarAccess.getConditionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getAlternatives()); }
		(rule__Condition__Alternatives)
		{ after(grammarAccess.getConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndOr
entryRuleAndOr
:
{ before(grammarAccess.getAndOrRule()); }
	 ruleAndOr
{ after(grammarAccess.getAndOrRule()); } 
	 EOF 
;

// Rule AndOr
ruleAndOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndOrAccess().getAlternatives()); }
		(rule__AndOr__Alternatives)
		{ after(grammarAccess.getAndOrAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFact
entryRuleFact
:
{ before(grammarAccess.getFactRule()); }
	 ruleFact
{ after(grammarAccess.getFactRule()); } 
	 EOF 
;

// Rule Fact
ruleFact 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getFactAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperator
entryRuleOperator
:
{ before(grammarAccess.getOperatorRule()); }
	 ruleOperator
{ after(grammarAccess.getOperatorRule()); } 
	 EOF 
;

// Rule Operator
ruleOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
		(rule__Operator__Alternatives)
		{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActions
entryRuleActions
:
{ before(grammarAccess.getActionsRule()); }
	 ruleActions
{ after(grammarAccess.getActionsRule()); } 
	 EOF 
;

// Rule Actions
ruleActions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionsAccess().getActionParserRuleCall()); }
		(ruleAction)*
		{ after(grammarAccess.getActionsAccess().getActionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getAlternatives()); }
		(rule__Action__Alternatives)
		{ after(grammarAccess.getActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTaskChangeOperation
entryRuleTaskChangeOperation
:
{ before(grammarAccess.getTaskChangeOperationRule()); }
	 ruleTaskChangeOperation
{ after(grammarAccess.getTaskChangeOperationRule()); } 
	 EOF 
;

// Rule TaskChangeOperation
ruleTaskChangeOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTaskChangeOperationAccess().getAlternatives()); }
		(rule__TaskChangeOperation__Alternatives)
		{ after(grammarAccess.getTaskChangeOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddViewComponentOperation
entryRuleAddViewComponentOperation
:
{ before(grammarAccess.getAddViewComponentOperationRule()); }
	 ruleAddViewComponentOperation
{ after(grammarAccess.getAddViewComponentOperationRule()); } 
	 EOF 
;

// Rule AddViewComponentOperation
ruleAddViewComponentOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddViewComponentOperationAccess().getGroup()); }
		(rule__AddViewComponentOperation__Group__0)
		{ after(grammarAccess.getAddViewComponentOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeleteViewComponentOperation
entryRuleDeleteViewComponentOperation
:
{ before(grammarAccess.getDeleteViewComponentOperationRule()); }
	 ruleDeleteViewComponentOperation
{ after(grammarAccess.getDeleteViewComponentOperationRule()); } 
	 EOF 
;

// Rule DeleteViewComponentOperation
ruleDeleteViewComponentOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteViewComponentOperationAccess().getGroup()); }
		(rule__DeleteViewComponentOperation__Group__0)
		{ after(grammarAccess.getDeleteViewComponentOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleViewComponent
entryRuleViewComponent
:
{ before(grammarAccess.getViewComponentRule()); }
	 ruleViewComponent
{ after(grammarAccess.getViewComponentRule()); } 
	 EOF 
;

// Rule ViewComponent
ruleViewComponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getViewComponentAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getViewComponentAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTargetContainer
entryRuleTargetContainer
:
{ before(grammarAccess.getTargetContainerRule()); }
	 ruleTargetContainer
{ after(grammarAccess.getTargetContainerRule()); } 
	 EOF 
;

// Rule TargetContainer
ruleTargetContainer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTargetContainerAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getTargetContainerAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNavigationChangeOperation
entryRuleNavigationChangeOperation
:
{ before(grammarAccess.getNavigationChangeOperationRule()); }
	 ruleNavigationChangeOperation
{ after(grammarAccess.getNavigationChangeOperationRule()); } 
	 EOF 
;

// Rule NavigationChangeOperation
ruleNavigationChangeOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNavigationChangeOperationAccess().getAlternatives()); }
		(rule__NavigationChangeOperation__Alternatives)
		{ after(grammarAccess.getNavigationChangeOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddNavLinkOperation
entryRuleAddNavLinkOperation
:
{ before(grammarAccess.getAddNavLinkOperationRule()); }
	 ruleAddNavLinkOperation
{ after(grammarAccess.getAddNavLinkOperationRule()); } 
	 EOF 
;

// Rule AddNavLinkOperation
ruleAddNavLinkOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddNavLinkOperationAccess().getGroup()); }
		(rule__AddNavLinkOperation__Group__0)
		{ after(grammarAccess.getAddNavLinkOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeleteNavLinkOperation
entryRuleDeleteNavLinkOperation
:
{ before(grammarAccess.getDeleteNavLinkOperationRule()); }
	 ruleDeleteNavLinkOperation
{ after(grammarAccess.getDeleteNavLinkOperationRule()); } 
	 EOF 
;

// Rule DeleteNavLinkOperation
ruleDeleteNavLinkOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteNavLinkOperationAccess().getGroup()); }
		(rule__DeleteNavLinkOperation__Group__0)
		{ after(grammarAccess.getDeleteNavLinkOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRedirectNavLinkOperation
entryRuleRedirectNavLinkOperation
:
{ before(grammarAccess.getRedirectNavLinkOperationRule()); }
	 ruleRedirectNavLinkOperation
{ after(grammarAccess.getRedirectNavLinkOperationRule()); } 
	 EOF 
;

// Rule RedirectNavLinkOperation
ruleRedirectNavLinkOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRedirectNavLinkOperationAccess().getGroup()); }
		(rule__RedirectNavLinkOperation__Group__0)
		{ after(grammarAccess.getRedirectNavLinkOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleText
entryRuleText
:
{ before(grammarAccess.getTextRule()); }
	 ruleText
{ after(grammarAccess.getTextRule()); } 
	 EOF 
;

// Rule Text
ruleText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getTextAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLayoutChangeOperation
entryRuleLayoutChangeOperation
:
{ before(grammarAccess.getLayoutChangeOperationRule()); }
	 ruleLayoutChangeOperation
{ after(grammarAccess.getLayoutChangeOperationRule()); } 
	 EOF 
;

// Rule LayoutChangeOperation
ruleLayoutChangeOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLayoutChangeOperationAccess().getAlternatives()); }
		(rule__LayoutChangeOperation__Alternatives)
		{ after(grammarAccess.getLayoutChangeOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChangeFontSizeOperation
entryRuleChangeFontSizeOperation
:
{ before(grammarAccess.getChangeFontSizeOperationRule()); }
	 ruleChangeFontSizeOperation
{ after(grammarAccess.getChangeFontSizeOperationRule()); } 
	 EOF 
;

// Rule ChangeFontSizeOperation
ruleChangeFontSizeOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChangeFontSizeOperationAccess().getGroup()); }
		(rule__ChangeFontSizeOperation__Group__0)
		{ after(grammarAccess.getChangeFontSizeOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChangeFontOperation
entryRuleChangeFontOperation
:
{ before(grammarAccess.getChangeFontOperationRule()); }
	 ruleChangeFontOperation
{ after(grammarAccess.getChangeFontOperationRule()); } 
	 EOF 
;

// Rule ChangeFontOperation
ruleChangeFontOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChangeFontOperationAccess().getGroup()); }
		(rule__ChangeFontOperation__Group__0)
		{ after(grammarAccess.getChangeFontOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChangeTableCssClassOperation
entryRuleChangeTableCssClassOperation
:
{ before(grammarAccess.getChangeTableCssClassOperationRule()); }
	 ruleChangeTableCssClassOperation
{ after(grammarAccess.getChangeTableCssClassOperationRule()); } 
	 EOF 
;

// Rule ChangeTableCssClassOperation
ruleChangeTableCssClassOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChangeTableCssClassOperationAccess().getGroup()); }
		(rule__ChangeTableCssClassOperation__Group__0)
		{ after(grammarAccess.getChangeTableCssClassOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFontSize
entryRuleFontSize
:
{ before(grammarAccess.getFontSizeRule()); }
	 ruleFontSize
{ after(grammarAccess.getFontSizeRule()); } 
	 EOF 
;

// Rule FontSize
ruleFontSize 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFontSizeAccess().getINTTerminalRuleCall()); }
		RULE_INT
		{ after(grammarAccess.getFontSizeAccess().getINTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getGroup_0()); }
		(rule__Condition__Group_0__0)
		{ after(grammarAccess.getConditionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getGroup_1()); }
		(rule__Condition__Group_1__0)
		{ after(grammarAccess.getConditionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndOrAccess().getANDKeyword_0()); }
		'AND'
		{ after(grammarAccess.getAndOrAccess().getANDKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAndOrAccess().getAmpersandKeyword_1()); }
		'&'
		{ after(grammarAccess.getAndOrAccess().getAmpersandKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getAndOrAccess().getORKeyword_2()); }
		'OR'
		{ after(grammarAccess.getAndOrAccess().getORKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getAndOrAccess().getVerticalLineKeyword_3()); }
		'|'
		{ after(grammarAccess.getAndOrAccess().getVerticalLineKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getGreaterThanSignKeyword_0()); }
		'>'
		{ after(grammarAccess.getOperatorAccess().getGreaterThanSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getLessThanSignKeyword_1()); }
		'<'
		{ after(grammarAccess.getOperatorAccess().getLessThanSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getEqualsSignEqualsSignKeyword_2()); }
		'=='
		{ after(grammarAccess.getOperatorAccess().getEqualsSignEqualsSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getExclamationMarkEqualsSignKeyword_3()); }
		'!='
		{ after(grammarAccess.getOperatorAccess().getExclamationMarkEqualsSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getGreaterThanSignEqualsSignKeyword_4()); }
		'>='
		{ after(grammarAccess.getOperatorAccess().getGreaterThanSignEqualsSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getLessThanSignEqualsSignKeyword_5()); }
		'<='
		{ after(grammarAccess.getOperatorAccess().getLessThanSignEqualsSignKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getValueAccess().getINTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_1()); }
		RULE_STRING
		{ after(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getTaskChangeOperationParserRuleCall_0()); }
		ruleTaskChangeOperation
		{ after(grammarAccess.getActionAccess().getTaskChangeOperationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getNavigationChangeOperationParserRuleCall_1()); }
		ruleNavigationChangeOperation
		{ after(grammarAccess.getActionAccess().getNavigationChangeOperationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getLayoutChangeOperationParserRuleCall_2()); }
		ruleLayoutChangeOperation
		{ after(grammarAccess.getActionAccess().getLayoutChangeOperationParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskChangeOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskChangeOperationAccess().getAddViewComponentOperationParserRuleCall_0()); }
		ruleAddViewComponentOperation
		{ after(grammarAccess.getTaskChangeOperationAccess().getAddViewComponentOperationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTaskChangeOperationAccess().getDeleteViewComponentOperationParserRuleCall_1()); }
		ruleDeleteViewComponentOperation
		{ after(grammarAccess.getTaskChangeOperationAccess().getDeleteViewComponentOperationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigationChangeOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigationChangeOperationAccess().getAddNavLinkOperationParserRuleCall_0()); }
		ruleAddNavLinkOperation
		{ after(grammarAccess.getNavigationChangeOperationAccess().getAddNavLinkOperationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNavigationChangeOperationAccess().getDeleteNavLinkOperationParserRuleCall_1()); }
		ruleDeleteNavLinkOperation
		{ after(grammarAccess.getNavigationChangeOperationAccess().getDeleteNavLinkOperationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getNavigationChangeOperationAccess().getRedirectNavLinkOperationParserRuleCall_2()); }
		ruleRedirectNavLinkOperation
		{ after(grammarAccess.getNavigationChangeOperationAccess().getRedirectNavLinkOperationParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayoutChangeOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayoutChangeOperationAccess().getChangeFontOperationParserRuleCall_0()); }
		ruleChangeFontOperation
		{ after(grammarAccess.getLayoutChangeOperationAccess().getChangeFontOperationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLayoutChangeOperationAccess().getChangeFontSizeOperationParserRuleCall_1()); }
		ruleChangeFontSizeOperation
		{ after(grammarAccess.getLayoutChangeOperationAccess().getChangeFontSizeOperationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLayoutChangeOperationAccess().getChangeTableCssClassOperationParserRuleCall_2()); }
		ruleChangeTableCssClassOperation
		{ after(grammarAccess.getLayoutChangeOperationAccess().getChangeTableCssClassOperationParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdaptionRule__Group__0__Impl
	rule__AdaptionRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptionRuleAccess().getRuleKeyword_0()); }
	'rule'
	{ after(grammarAccess.getAdaptionRuleAccess().getRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdaptionRule__Group__1__Impl
	rule__AdaptionRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptionRuleAccess().getRuleNameParserRuleCall_1()); }
	ruleRuleName
	{ after(grammarAccess.getAdaptionRuleAccess().getRuleNameParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdaptionRule__Group__2__Impl
	rule__AdaptionRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptionRuleAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getAdaptionRuleAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdaptionRule__Group__3__Impl
	rule__AdaptionRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptionRuleAccess().getIFKeyword_3()); }
	'IF'
	{ after(grammarAccess.getAdaptionRuleAccess().getIFKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdaptionRule__Group__4__Impl
	rule__AdaptionRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptionRuleAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getAdaptionRuleAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdaptionRule__Group__5__Impl
	rule__AdaptionRule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptionRuleAccess().getConditionsParserRuleCall_5()); }
	ruleConditions
	{ after(grammarAccess.getAdaptionRuleAccess().getConditionsParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdaptionRule__Group__6__Impl
	rule__AdaptionRule__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptionRuleAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getAdaptionRuleAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdaptionRule__Group__7__Impl
	rule__AdaptionRule__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptionRuleAccess().getTHENKeyword_7()); }
	'THEN'
	{ after(grammarAccess.getAdaptionRuleAccess().getTHENKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdaptionRule__Group__8__Impl
	rule__AdaptionRule__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptionRuleAccess().getLeftParenthesisKeyword_8()); }
	'('
	{ after(grammarAccess.getAdaptionRuleAccess().getLeftParenthesisKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdaptionRule__Group__9__Impl
	rule__AdaptionRule__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptionRuleAccess().getActionsParserRuleCall_9()); }
	ruleActions
	{ after(grammarAccess.getAdaptionRuleAccess().getActionsParserRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdaptionRule__Group__10__Impl
	rule__AdaptionRule__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptionRuleAccess().getRightParenthesisKeyword_10()); }
	')'
	{ after(grammarAccess.getAdaptionRuleAccess().getRightParenthesisKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdaptionRule__Group__11__Impl
	rule__AdaptionRule__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptionRuleAccess().getSemicolonKeyword_11()); }
	';'
	{ after(grammarAccess.getAdaptionRuleAccess().getSemicolonKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdaptionRule__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptionRule__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptionRuleAccess().getRightCurlyBracketKeyword_12()); }
	'}'
	{ after(grammarAccess.getAdaptionRuleAccess().getRightCurlyBracketKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conditions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditions__Group__0__Impl
	rule__Conditions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionsAccess().getConditionParserRuleCall_0()); }
	ruleCondition
	{ after(grammarAccess.getConditionsAccess().getConditionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditions__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionsAccess().getGroup_1()); }
	(rule__Conditions__Group_1__0)*
	{ after(grammarAccess.getConditionsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conditions__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditions__Group_1__0__Impl
	rule__Conditions__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionsAccess().getAndOrParserRuleCall_1_0()); }
	ruleAndOr
	{ after(grammarAccess.getConditionsAccess().getAndOrParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditions__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionsAccess().getConditionParserRuleCall_1_1()); }
	ruleCondition
	{ after(grammarAccess.getConditionsAccess().getConditionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__0__Impl
	rule__Condition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getFactParserRuleCall_0_0()); }
	ruleFact
	{ after(grammarAccess.getConditionAccess().getFactParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__1__Impl
	rule__Condition__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getOperatorParserRuleCall_0_1()); }
	ruleOperator
	{ after(grammarAccess.getConditionAccess().getOperatorParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getValueParserRuleCall_0_2()); }
	ruleValue
	{ after(grammarAccess.getConditionAccess().getValueParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__0__Impl
	rule__Condition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getFactParserRuleCall_1_0()); }
	ruleFact
	{ after(grammarAccess.getConditionAccess().getFactParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__1__Impl
	rule__Condition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getConditionAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getConditionAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddViewComponentOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddViewComponentOperation__Group__0__Impl
	rule__AddViewComponentOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddViewComponentOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddViewComponentOperationAccess().getAddViewComponentKeyword_0()); }
	'addViewComponent'
	{ after(grammarAccess.getAddViewComponentOperationAccess().getAddViewComponentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddViewComponentOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddViewComponentOperation__Group__1__Impl
	rule__AddViewComponentOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddViewComponentOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddViewComponentOperationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAddViewComponentOperationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddViewComponentOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddViewComponentOperation__Group__2__Impl
	rule__AddViewComponentOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddViewComponentOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddViewComponentOperationAccess().getViewComponentParserRuleCall_2()); }
	ruleViewComponent
	{ after(grammarAccess.getAddViewComponentOperationAccess().getViewComponentParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddViewComponentOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddViewComponentOperation__Group__3__Impl
	rule__AddViewComponentOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AddViewComponentOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddViewComponentOperationAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getAddViewComponentOperationAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddViewComponentOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddViewComponentOperation__Group__4__Impl
	rule__AddViewComponentOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AddViewComponentOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddViewComponentOperationAccess().getTargetContainerParserRuleCall_4()); }
	ruleTargetContainer
	{ after(grammarAccess.getAddViewComponentOperationAccess().getTargetContainerParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddViewComponentOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddViewComponentOperation__Group__5__Impl
	rule__AddViewComponentOperation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AddViewComponentOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddViewComponentOperationAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getAddViewComponentOperationAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddViewComponentOperation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddViewComponentOperation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddViewComponentOperation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddViewComponentOperationAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getAddViewComponentOperationAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteViewComponentOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteViewComponentOperation__Group__0__Impl
	rule__DeleteViewComponentOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteViewComponentOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteViewComponentOperationAccess().getDeleteViewComponentKeyword_0()); }
	'deleteViewComponent'
	{ after(grammarAccess.getDeleteViewComponentOperationAccess().getDeleteViewComponentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteViewComponentOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteViewComponentOperation__Group__1__Impl
	rule__DeleteViewComponentOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteViewComponentOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteViewComponentOperationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getDeleteViewComponentOperationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteViewComponentOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteViewComponentOperation__Group__2__Impl
	rule__DeleteViewComponentOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteViewComponentOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteViewComponentOperationAccess().getViewComponentParserRuleCall_2()); }
	ruleViewComponent
	{ after(grammarAccess.getDeleteViewComponentOperationAccess().getViewComponentParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteViewComponentOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteViewComponentOperation__Group__3__Impl
	rule__DeleteViewComponentOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteViewComponentOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteViewComponentOperationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getDeleteViewComponentOperationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteViewComponentOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteViewComponentOperation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteViewComponentOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteViewComponentOperationAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getDeleteViewComponentOperationAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddNavLinkOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddNavLinkOperation__Group__0__Impl
	rule__AddNavLinkOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddNavLinkOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddNavLinkOperationAccess().getAddNavLinkKeyword_0()); }
	'addNavLink'
	{ after(grammarAccess.getAddNavLinkOperationAccess().getAddNavLinkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddNavLinkOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddNavLinkOperation__Group__1__Impl
	rule__AddNavLinkOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddNavLinkOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddNavLinkOperationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAddNavLinkOperationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddNavLinkOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddNavLinkOperation__Group__2__Impl
	rule__AddNavLinkOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddNavLinkOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddNavLinkOperationAccess().getViewComponentParserRuleCall_2()); }
	ruleViewComponent
	{ after(grammarAccess.getAddNavLinkOperationAccess().getViewComponentParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddNavLinkOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddNavLinkOperation__Group__3__Impl
	rule__AddNavLinkOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AddNavLinkOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddNavLinkOperationAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getAddNavLinkOperationAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddNavLinkOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddNavLinkOperation__Group__4__Impl
	rule__AddNavLinkOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AddNavLinkOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddNavLinkOperationAccess().getTextParserRuleCall_4()); }
	ruleText
	{ after(grammarAccess.getAddNavLinkOperationAccess().getTextParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddNavLinkOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddNavLinkOperation__Group__5__Impl
	rule__AddNavLinkOperation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AddNavLinkOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddNavLinkOperationAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getAddNavLinkOperationAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddNavLinkOperation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddNavLinkOperation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddNavLinkOperation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddNavLinkOperationAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getAddNavLinkOperationAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteNavLinkOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteNavLinkOperation__Group__0__Impl
	rule__DeleteNavLinkOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteNavLinkOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteNavLinkOperationAccess().getDeleteNavLinkKeyword_0()); }
	'deleteNavLink'
	{ after(grammarAccess.getDeleteNavLinkOperationAccess().getDeleteNavLinkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteNavLinkOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteNavLinkOperation__Group__1__Impl
	rule__DeleteNavLinkOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteNavLinkOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteNavLinkOperationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getDeleteNavLinkOperationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteNavLinkOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteNavLinkOperation__Group__2__Impl
	rule__DeleteNavLinkOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteNavLinkOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteNavLinkOperationAccess().getViewComponentParserRuleCall_2()); }
	ruleViewComponent
	{ after(grammarAccess.getDeleteNavLinkOperationAccess().getViewComponentParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteNavLinkOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteNavLinkOperation__Group__3__Impl
	rule__DeleteNavLinkOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteNavLinkOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteNavLinkOperationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getDeleteNavLinkOperationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteNavLinkOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteNavLinkOperation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteNavLinkOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteNavLinkOperationAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getDeleteNavLinkOperationAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RedirectNavLinkOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RedirectNavLinkOperation__Group__0__Impl
	rule__RedirectNavLinkOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RedirectNavLinkOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedirectNavLinkOperationAccess().getRedirectNavLinkKeyword_0()); }
	'redirectNavLink'
	{ after(grammarAccess.getRedirectNavLinkOperationAccess().getRedirectNavLinkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RedirectNavLinkOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RedirectNavLinkOperation__Group__1__Impl
	rule__RedirectNavLinkOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RedirectNavLinkOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedirectNavLinkOperationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRedirectNavLinkOperationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RedirectNavLinkOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RedirectNavLinkOperation__Group__2__Impl
	rule__RedirectNavLinkOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RedirectNavLinkOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedirectNavLinkOperationAccess().getViewComponentParserRuleCall_2()); }
	ruleViewComponent
	{ after(grammarAccess.getRedirectNavLinkOperationAccess().getViewComponentParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RedirectNavLinkOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RedirectNavLinkOperation__Group__3__Impl
	rule__RedirectNavLinkOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RedirectNavLinkOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedirectNavLinkOperationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getRedirectNavLinkOperationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RedirectNavLinkOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RedirectNavLinkOperation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RedirectNavLinkOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedirectNavLinkOperationAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getRedirectNavLinkOperationAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChangeFontSizeOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeFontSizeOperation__Group__0__Impl
	rule__ChangeFontSizeOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeFontSizeOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeFontSizeOperationAccess().getChangeFontSizeKeyword_0()); }
	'changeFontSize'
	{ after(grammarAccess.getChangeFontSizeOperationAccess().getChangeFontSizeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeFontSizeOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeFontSizeOperation__Group__1__Impl
	rule__ChangeFontSizeOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeFontSizeOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeFontSizeOperationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getChangeFontSizeOperationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeFontSizeOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeFontSizeOperation__Group__2__Impl
	rule__ChangeFontSizeOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeFontSizeOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeFontSizeOperationAccess().getFontSizeParserRuleCall_2()); }
	ruleFontSize
	{ after(grammarAccess.getChangeFontSizeOperationAccess().getFontSizeParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeFontSizeOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeFontSizeOperation__Group__3__Impl
	rule__ChangeFontSizeOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeFontSizeOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeFontSizeOperationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getChangeFontSizeOperationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeFontSizeOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeFontSizeOperation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeFontSizeOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeFontSizeOperationAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getChangeFontSizeOperationAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChangeFontOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeFontOperation__Group__0__Impl
	rule__ChangeFontOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeFontOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeFontOperationAccess().getChangeFontKeyword_0()); }
	'changeFont'
	{ after(grammarAccess.getChangeFontOperationAccess().getChangeFontKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeFontOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeFontOperation__Group__1__Impl
	rule__ChangeFontOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeFontOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeFontOperationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getChangeFontOperationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeFontOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeFontOperation__Group__2__Impl
	rule__ChangeFontOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeFontOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeFontOperationAccess().getTextParserRuleCall_2()); }
	ruleText
	{ after(grammarAccess.getChangeFontOperationAccess().getTextParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeFontOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeFontOperation__Group__3__Impl
	rule__ChangeFontOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeFontOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeFontOperationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getChangeFontOperationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeFontOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeFontOperation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeFontOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeFontOperationAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getChangeFontOperationAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChangeTableCssClassOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeTableCssClassOperation__Group__0__Impl
	rule__ChangeTableCssClassOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeTableCssClassOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeTableCssClassOperationAccess().getChangeTableCssKeyword_0()); }
	'changeTableCss'
	{ after(grammarAccess.getChangeTableCssClassOperationAccess().getChangeTableCssKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeTableCssClassOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeTableCssClassOperation__Group__1__Impl
	rule__ChangeTableCssClassOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeTableCssClassOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeTableCssClassOperationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getChangeTableCssClassOperationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeTableCssClassOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeTableCssClassOperation__Group__2__Impl
	rule__ChangeTableCssClassOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeTableCssClassOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeTableCssClassOperationAccess().getTextParserRuleCall_2()); }
	ruleText
	{ after(grammarAccess.getChangeTableCssClassOperationAccess().getTextParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeTableCssClassOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeTableCssClassOperation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeTableCssClassOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeTableCssClassOperationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getChangeTableCssClassOperationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__AdaptationRulesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getAdaptationRulesAdaptionRuleParserRuleCall_0()); }
		ruleadaptionRule
		{ after(grammarAccess.getModelAccess().getAdaptationRulesAdaptionRuleParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleName__RuleAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleNameAccess().getRuleIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getRuleNameAccess().getRuleIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
